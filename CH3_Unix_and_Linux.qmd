#Chapter 3: Unix and Linux
Written by: Woo Jin Lee (SCI-1)
Word Count: 1091

“Unix was not designed to stop you from doing stupid things, because that would also stop you from doing clever things.” - Douglas Gwyn

-----------------------------------------------------------------------------------------------------------------------
One of the ultimate yet biggest key turning points of the history of modern computer science was through the development of the experimental time-sharing machine, jointly with AT&T, Bell Labs, and the Massachusetts Institute of Technology. With its introduction to the computing world, Unix and its offspring, Linux, their presence in the computing world since the mid-1960s has left a significant mark in the beginnings of Bell Labs and other companies, highly impacting the ways we see and use servers, personal computers, and mobile devices today. This chapter from the history of computer science will convey the origins of Unix and Linux as well as its algorithms, technical considerations, and their impact on the modern computing world. 

	## The Origin of Unix and Linux
The development and foundation of Unix and Linux in the computing world trace back to a time of rapid collaborative innovations amongst top research and company facilities, interested in new and vast technological advancements. By understanding the true origins, motivations, and principles of building Unix and Linux, we are able to shed light on why modern computing has been able to develop and cope with key elements from their pre-decedents and how they still play a vital role in computing even today. 

Bell Labs, the research facilities at AT&T with the collaboration of M.I.T., also known as the Massachusetts Institute of Technology, have been working on a project to create a new OS, operating system, that would potentially address the shortcoming problems of existing systems in the computing world. In the 1960s, computing was dominated by proprietary operating systems along with mainframe architectures that were inflexible, highly complex, and often tailored specifics of certain hardware. With such in mind, an experimental time-sharing operating system, Multics, for the GE-645 mainframe was to be created. Multics brought in as much innovations as it brought in problems to the computing world which sought to be fixed. Therefore, Ken Thompson, Dennis Ritchie, and many more researchers at Bell Labs have departed to redo their work but on a much smaller scale. 

Keeping in mind to prioritize the development of an operating system that kept its ease of use, modularity, and extensibility, Thompson and Ritchie contributed significantly to the development of Unix, which embodied simplicity, portability, and elegance in the computing world for smaller servers and computers. Their result of an operating system was as minimalistic yet as powerful which could run on a wide range of different platforms, ranging from minicomputers to big mainframes in the computing world. 

The operating system that featured simplicity and flexibility was sought to be written in the C programming language, which was also developed at Bell Labs by Ritchie. This act is considered as a masterstroke that profoundly influenced the course of computing history because the C programming language offered portability and a wide variety of abstraction, previously unseen. This allowed Unix to become an operating system that can easily be adapted to different hardware configurations and mainframe architectures, becoming the time-shared operating system to the world. Unix’s unique modular design and its intuitive user interface has led to its widespread adoption through different education, governmental, and industrial fields, highly impacting the way we see computing and computers today. 

As many might argue but some might agree, Linux, also known as an offspring of Unix, owes its lineage to Unix despite its own distinct development trajectories and origins. The history of Linux dates back to 1991, when a Finnish student in computer science began his work on a new OS kernel as his hobby project. Inspired by the creation and development of Unix, Kinus Torvalds has departed to work on a project, aside from his studies, as he was dissatisfied with the present limitations of existing operating systems. What began as a side project for Torvalds quickly gained momentum and became the interest of many developers from around the world, railing behind Torvald’s vision in creating a Unix-like kernel which would prioritize its open-source and ease of use. 

Linux, released under the GNU General Public License (GPL), has attracted a vibrant community of developers who effectively collaborated to enhance its compatibility, features, and performance. The following mindset has propelled Linux’s open-source development which was propelled as a viable prominences of the proprietary Unix variants. Linux’s unique compatibility with the POSIX standard has made its interface and operating system become a natural choice for various educational institutions, businesses, and computer enthusiasts due to its reliability, cost-efficiency, and compatibility. In modern computing today, Linux is one of the biggest operating systems which powers a vast array of systems and devices which range from personal computers like smartphones and tablets to supercomputers and multinational servers. 

	## Impact to The Modern World
Unix and Linux have left a profound and extensive impact on the modern world. Their cost-effectiveness as well as their robustness and scalability all have revolutionized industries by bringing innovation, connectivity on a global scale, and efficiency. They serve as the backbone to our modern digitalized world as they are profoundly seen to be used in modern servers and clouds along with smartphones and IoT devices. This most definitely creates a concrete foundation for Unix and Linux as becoming one of the most influential technologies in the history of the computing era. 

  ## Technical Considerations and Algorithm Development
Both Unix and Linux have technical considerations and algorithm developments in their modular design that serve as a pivotal point to their successes in the computing world. These operating systems which serve as a multi-user, multitasking operating system on either big or small scales of the modern computing world are highly known for their adherence to open standards (GPL), its cost-efficiency, reliability, and its vigorous security features. Some of the key algorithmic innovations include but are not limited to the hierarchical file system and the command pipelines. These have highly revolutionized how we see and use data management and command execution in modern computers and technologies. This more significantly increased efficiency amongst various industries on a global scale. Moreover, the implementation of the C programming language to the Unix operating interface has made it possible for it to be efficient, portable, and extensive in terms of reshaping the modern landscape of programming interfaces and systems. All the following form a concrete foundation for Unix and Linux success and contribution to the modern computing environments, extensively impacting how we perceive and use technologies in numerous industries. 


  ## References
1. Unix - A History and a Memoir (By: Brian Kernighan)
2. https://www.guru99.com/difference-unix-vs-linux.html#:~:text=When%20compare%20Unix%20to%20Linux,the%20standard%20OS%20in%20universities. 
3. https://www.geeksforgeeks.org/linux-vs-unix/ 
4. https://howset.com/history-impact-of-linux/ 
5. https://web.archive.org/web/20140402194704/http://www.bell-labs.com/history/unix/pdp7.html
6. https://www.geeksforgeeks.org/linux-file-hierarchy-structure/ 
7. https://www.youtube.com/watch?v=UVyKkcPoRb8 

Link to Google Docs: https://docs.google.com/document/d/1y47j9IwxD4W-FnKt-JgXF7LjaeHiizQhBHYHe0xUWpk/edit?usp=sharing 
